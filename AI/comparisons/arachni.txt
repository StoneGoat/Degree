 [+] Web Application Security Report - SCNR::Engine Framework

 [~] Report generated on: 2025-05-15 15:10:38 +0200

 [+] System settings:
 [~] ---------------
 [~] Version:           0.1.2
 [~] Seed:              793d12117e5d9e41ff2fcea2c253ed81
 [~] Audit started on:  2025-05-15 15:07:01 +0200
 [~] Audit finished on: 2025-05-15 15:10:38 +0200
 [~] Runtime:           00:03:37

 [~] URL:        https://vuln.stenaeke.org/
 [~] User agent:

 [*] Audited elements:
 [~] * Links
 [~] * Forms
 [~] * Cookies
 [~] * Headers
 [~] * XMLs
 [~] * JSONs
 [~] * UI inputs
 [~] * UI forms

 [*] Checks: *

 [~] ===========================

 [+] 14 issues were detected.

 [+] [1] Common directory (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2261951474
 [~] Severity:   Medium
 [~] Description:
 [~]
Web applications are often made up of multiple files and directories.

It is possible that over time some directories may become unreferenced (unused)
by the web application and forgotten about by the administrator/developer.
Because web applications are built using common frameworks, they contain common
directories that can be discovered (independent of server).

During the initial recon stages of an attack, cyber-criminals will attempt to
locate unreferenced directories in the hope that the directory will assist in further
compromise of the web application.
To achieve this they will make thousands of requests using word lists containing
common names.
The response headers from the server will then indicate if the directory exists.

SCNR::Engine also contains a list of common directory names which it will attempt to access.

 [~] Tags: path, directory, common, discovery

 [~] CWE: http://cwe.mitre.org/data/definitions/538.html
 [~] References:
 [~]   CWE - http://cwe.mitre.org/data/definitions/538.html
 [~]   OWASP - https://www.owasp.org/index.php/Forced_browsing

 [~] URL:        https://vuln.stenaeke.org/config/
 [~] Element:    server

 [~] Proof:     "HTTP/2 200 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/config/
 [~] HTTP request
HEAD /config/ HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1183
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [+] [2] Common directory (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     3712407227
 [~] Severity:   Medium
 [~] Description:
 [~]
Web applications are often made up of multiple files and directories.

It is possible that over time some directories may become unreferenced (unused)
by the web application and forgotten about by the administrator/developer.
Because web applications are built using common frameworks, they contain common
directories that can be discovered (independent of server).

During the initial recon stages of an attack, cyber-criminals will attempt to
locate unreferenced directories in the hope that the directory will assist in further
compromise of the web application.
To achieve this they will make thousands of requests using word lists containing
common names.
The response headers from the server will then indicate if the directory exists.

SCNR::Engine also contains a list of common directory names which it will attempt to access.

 [~] Tags: path, directory, common, discovery

 [~] CWE: http://cwe.mitre.org/data/definitions/538.html
 [~] References:
 [~]   CWE - http://cwe.mitre.org/data/definitions/538.html
 [~]   OWASP - https://www.owasp.org/index.php/Forced_browsing

 [~] URL:        https://vuln.stenaeke.org/docs/
 [~] Element:    server

 [~] Proof:     "HTTP/2 200 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/docs/
 [~] HTTP request
GET /docs/ HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1090
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [+] [3] Missing 'Strict-Transport-Security' header (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2994478418
 [~] Severity:   Medium
 [~] Description:
 [~]
The HTTP protocol by itself is clear text, meaning that any data that is
transmitted via HTTP can be captured and the contents viewed. To keep data
private and prevent it from being intercepted, HTTP is often tunnelled through
either Secure Sockets Layer (SSL) or Transport Layer Security (TLS).
When either of these encryption standards are used, it is referred to as HTTPS.

HTTP Strict Transport Security (HSTS) is an optional response header that can be
configured on the server to instruct the browser to only communicate via HTTPS.
This will be enforced by the browser even if the user requests a HTTP resource
on the same server.

Cyber-criminals will often attempt to compromise sensitive information passed
from the client to the server using HTTP. This can be conducted via various
Man-in-The-Middle (MiTM) attacks or through network packet captures.

SCNR::Engine discovered that the affected application is using HTTPS however does not
use the HSTS header.

 [~] Tags:

 [~] CWE: http://cwe.mitre.org/data/definitions/200.html
 [~] References:
 [~]   OWASP - https://www.owasp.org/index.php/HTTP_Strict_Transport_Security
 [~]   Wikipedia - http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security

 [~] URL:        https://vuln.stenaeke.org/
 [~] Element:    server

 [~] Proof:     "HTTP/2 302 "



 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/
 [~] HTTP request
GET / HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1
X-Scnr-Introspector-Trace: 1



 [+] [4] Common sensitive file (Untrusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1672576898
 [~] Severity:   Low
 [~] Description:
 [~]
Web applications are often made up of multiple files and directories.

It is possible that over time some files may become unreferenced (unused)
by the web application and forgotten about by the administrator/developer.
Because web applications are built using common frameworks, they contain common
files that can be discovered (independent of server).

During the initial recon stages of an attack, cyber-criminals will attempt to
locate unreferenced files in the hope that the file will assist in further
compromise of the web application.
To achieve this they will make thousands of requests using word lists containing
common filenames.
The response headers from the server will then indicate if the file exists.

SCNR::Engine also contains a list of common file names which it will attempt to access.

 [~] Tags: common, path, file, discovery
 [~] References:
 [~]   Apache.org - http://httpd.apache.org/docs/2.0/mod/mod_access.html

 [~] URL:        https://vuln.stenaeke.org/php.ini
 [~] Element:    server

 [~] Proof:     "HTTP/2 200 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/php.ini
 [~] HTTP request
HEAD /php.ini HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1623
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [~] Remarks
 [~] -------
 [~]   By meta_analysis:
 [~]     *  This issue was logged by a discovery check but the response for the resource it
identified is very similar to responses for other resources of similar type.
This is a strong indication that the logged issue is a false positive.


 [+] [5] Common sensitive file (Untrusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     3489997889
 [~] Severity:   Low
 [~] Description:
 [~]
Web applications are often made up of multiple files and directories.

It is possible that over time some files may become unreferenced (unused)
by the web application and forgotten about by the administrator/developer.
Because web applications are built using common frameworks, they contain common
files that can be discovered (independent of server).

During the initial recon stages of an attack, cyber-criminals will attempt to
locate unreferenced files in the hope that the file will assist in further
compromise of the web application.
To achieve this they will make thousands of requests using word lists containing
common filenames.
The response headers from the server will then indicate if the file exists.

SCNR::Engine also contains a list of common file names which it will attempt to access.

 [~] Tags: common, path, file, discovery
 [~] References:
 [~]   Apache.org - http://httpd.apache.org/docs/2.0/mod/mod_access.html

 [~] URL:        https://vuln.stenaeke.org/login.php
 [~] Element:    server

 [~] Proof:     "HTTP/2 302 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/login.php
 [~] HTTP request
HEAD /login.php HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1609
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [~] Remarks
 [~] -------
 [~]   By meta_analysis:
 [~]     *  This issue was logged by a discovery check but the response for the resource it
identified is very similar to responses for other resources of similar type.
This is a strong indication that the logged issue is a false positive.


 [+] [6] Common sensitive file (Untrusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2009768310
 [~] Severity:   Low
 [~] Description:
 [~]
Web applications are often made up of multiple files and directories.

It is possible that over time some files may become unreferenced (unused)
by the web application and forgotten about by the administrator/developer.
Because web applications are built using common frameworks, they contain common
files that can be discovered (independent of server).

During the initial recon stages of an attack, cyber-criminals will attempt to
locate unreferenced files in the hope that the file will assist in further
compromise of the web application.
To achieve this they will make thousands of requests using word lists containing
common filenames.
The response headers from the server will then indicate if the file exists.

SCNR::Engine also contains a list of common file names which it will attempt to access.

 [~] Tags: common, path, file, discovery
 [~] References:
 [~]   Apache.org - http://httpd.apache.org/docs/2.0/mod/mod_access.html

 [~] URL:        https://vuln.stenaeke.org/robots.txt
 [~] Element:    server

 [~] Proof:     "HTTP/2 200 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/robots.txt
 [~] HTTP request
HEAD /robots.txt HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1606
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [~] Remarks
 [~] -------
 [~]   By meta_analysis:
 [~]     *  This issue was logged by a discovery check but the response for the resource it
identified is very similar to responses for other resources of similar type.
This is a strong indication that the logged issue is a false positive.


 [+] [7] 'Server' header (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     4221399100
 [~] Severity:   Low
 [~] Description:
 [~]
The `Server` header describes the software used by the origin server that handled
the request — that is, the server that generated the response.

Avoid overly-detailed `Server` values, as they can reveal information that may make
it (slightly) easier for attackers to exploit known security holes.

 [~] Tags:

 [~] CWE: http://cwe.mitre.org/data/definitions/200.html
 [~] References:
 [~]   MDN - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server

 [~] URL:        https://vuln.stenaeke.org/login.php
 [~] Element:    server

 [~] Proof:     "cloudflare"



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/login.php
 [~] HTTP request
GET /login.php HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 694
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [+] [8] Missing 'X-Frame-Options' header (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     766960896
 [~] Severity:   Low
 [~] Description:
 [~]
Clickjacking (User Interface redress attack, UI redress attack, UI redressing)
is a malicious technique of tricking a Web user into clicking on something different
from what the user perceives they are clicking on, thus potentially revealing
confidential information or taking control of their computer while clicking on
seemingly innocuous web pages.

The server didn't return an `X-Frame-Options` header which means that this website
could be at risk of a clickjacking attack.

The `X-Frame-Options` HTTP response header can be used to indicate whether or not
a browser should be allowed to render a page inside a frame or iframe. Sites can
use this to avoid clickjacking attacks, by ensuring that their content is not
embedded into other sites.

 [~] Tags:

 [~] CWE: http://cwe.mitre.org/data/definitions/693.html
 [~] References:
 [~]   MDN - https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options
 [~]   RFC - http://tools.ietf.org/html/rfc7034
 [~]   OWASP - https://www.owasp.org/index.php/Clickjacking

 [~] URL:        https://vuln.stenaeke.org/login.php
 [~] Element:    server

 [~] Proof:     "HTTP/2 200 "



 [~] Referring page: https://vuln.stenaeke.org/login.php

 [~] Affected page:  https://vuln.stenaeke.org/login.php
 [~] HTTP request
GET /login.php HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 694
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [+] [9] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     1110826525
 [~] Severity:   Informational
 [~] Description:
 [~]
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        https://vuln.stenaeke.org/config/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] Element:    server

 [~] Proof:     "HTTP/2 405 "



 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/config/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] HTTP request
PUT /config/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81 HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 5016
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low
Content-Length: 60

Created by SCNR::Engine. PUT793d12117e5d9e41ff2fcea2c253ed81

 [+] [10] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     427187223
 [~] Severity:   Informational
 [~] Description:
 [~]
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        https://vuln.stenaeke.org/docs/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] Element:    server

 [~] Proof:     "HTTP/2 405 "



 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/docs/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] HTTP request
PUT /docs/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81 HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 3688
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low
Content-Length: 60

Created by SCNR::Engine. PUT793d12117e5d9e41ff2fcea2c253ed81

 [+] [11] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     363571607
 [~] Severity:   Informational
 [~] Description:
 [~]
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        https://vuln.stenaeke.org/
 [~] Element:    server

 [~] Proof:     "HTTP/2 405 "



 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/
 [~] HTTP request
TRACE / HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 132
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low



 [+] [12] Interesting response (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     4212246432
 [~] Severity:   Informational
 [~] Description:
 [~]
The server responded with a non 200 (OK) nor 404 (Not Found) status code.
This is a non-issue, however exotic HTTP response status codes can provide useful
insights into the behavior of the web application and assist with the penetration test.

 [~] Tags: interesting, response, server
 [~] References:
 [~]   w3.org - http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

 [~] URL:        https://vuln.stenaeke.org/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] Element:    server

 [~] Proof:     "HTTP/2 405 "



 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [~] HTTP request
PUT /SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81 HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 131
X-Scnr-Introspector-Trace: 1
Cookie: PHPSESSID=78ot4e13ie6qa8hl7ho7hidqq0;security=low
Content-Length: 60

Created by SCNR::Engine. PUT793d12117e5d9e41ff2fcea2c253ed81

 [+] [13] Insecure cookie (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2014634883
 [~] Severity:   Informational
 [~] Description:
 [~]
HTTP by itself is a stateless protocol. Therefore the server is unable to determine
which requests are performed by which client, and which clients are authenticated
or unauthenticated.

The use of HTTP cookies within the headers, allows a web server to identify each
individual client and can therefore determine which clients hold valid
authentication, from those that do not. These are known as session cookies.

When a cookie is set by the server (sent the header of an HTTP response) there
are several flags that can be set to configure the properties of the cookie and
how it is to be handled by the browser.

One of these flags is known as the `secure` flag. When the secure flag is set,
the browser will prevent it from being sent over a clear text channel (HTTP) and
only allow it to be sent when an encrypted channel is used (HTTPS).

SCNR::Engine discovered that a cookie was set by the server without the secure flag
being set. Although the initial setting of this cookie was via an HTTPS
connection, any HTTP link to the same server will result in the cookie being
send in clear text.

 [~] Tags:

 [~] CWE: http://cwe.mitre.org/data/definitions/200.html
 [~] References:
 [~]   SecureFlag - OWASP - https://www.owasp.org/index.php/SecureFlag

 [~] URL:        https://vuln.stenaeke.org/
 [~] Element:    cookie
 [~] All inputs: PHPSESSID




 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/
 [~] HTTP request
GET / HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1
X-Scnr-Introspector-Trace: 1



 [+] [14] HttpOnly cookie (Trusted)
 [~] ~~~~~~~~~~~~~~~~~~~~
 [~] Digest:     2120944703
 [~] Severity:   Informational
 [~] Description:
 [~]
HTTP by itself is a stateless protocol. Therefore the server is unable to determine
which requests are performed by which client, and which clients are authenticated
or unauthenticated.

The use of HTTP cookies within the headers, allows a web server to identify each
individual client and can therefore determine which clients hold valid
authentication, from those that do not. These are known as session cookies.

When a cookie is set by the server (sent the header of an HTTP response) there
are several flags that can be set to configure the properties of the cookie and
how it is to be handled by the browser.

The `HttpOnly` flag assists in the prevention of client side-scripts (such as
JavaScript) accessing and using the cookie.

This can help prevent XSS attacks targeting the cookies holding the client's
session token (setting the `HttpOnly` flag does not prevent, nor safeguard against
XSS vulnerabilities themselves).

 [~] Tags:

 [~] CWE: http://cwe.mitre.org/data/definitions/200.html
 [~] References:
 [~]   HttpOnly - OWASP - https://www.owasp.org/index.php/HttpOnly

 [~] URL:        https://vuln.stenaeke.org/
 [~] Element:    cookie
 [~] All inputs: PHPSESSID




 [~] Referring page: https://vuln.stenaeke.org/

 [~] Affected page:  https://vuln.stenaeke.org/
 [~] HTTP request
GET / HTTP/2
Host: vuln.stenaeke.org
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/5.0 (Gecko) SCNR::Engine/v0.1.2
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.8,he;q=0.6
X-Scnr-Engine-Scan-Seed: 793d12117e5d9e41ff2fcea2c253ed81
X-Scnr-Request-Id: 1
X-Scnr-Introspector-Trace: 1




 [+] Plugin data:
 [~] ---------------


 [*] Health map
 [~] ~~~~~~~~~~~~~~
 [~] Description: Generates a simple list of safe/unsafe URLs.

 [~] Legend:
 [+] No issues
 [-] Has issues

 [-] https://vuln.stenaeke.org/
 [-] https://vuln.stenaeke.org/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [-] https://vuln.stenaeke.org/config/
 [-] https://vuln.stenaeke.org/config/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [-] https://vuln.stenaeke.org/docs/
 [-] https://vuln.stenaeke.org/docs/SCNR_Engine-793d12117e5d9e41ff2fcea2c253ed81
 [+] https://vuln.stenaeke.org/docs/pdf.html
 [-] https://vuln.stenaeke.org/login.php
 [-] https://vuln.stenaeke.org/php.ini
 [-] https://vuln.stenaeke.org/robots.txt

 [~] Total: 10
 [+] Without issues: 1
 [-] With issues: 9 ( 90% )

 [~] Report saved at: /home/optibot/.scnr/reports/vuln.stenaeke.org_2025-05-15_15_10_38_+0200.ser [0.01MB]
 [~] Session saved at: /home/optibot/.scnr/snapshots/vuln.stenaeke.org_2025-05-15_15_10_38_+0200_346baf40e1074d45332c9c3347b3d486.ses



 [~] Audited 11 page snapshots.

 [~] Duration: 00:03:37
 [~] Processed 8939/8939 HTTP requests -- failed: 0
 [~] -- 99.953 requests/second.
 [~] Processed 0/0 browser jobs -- failed: 0
 [~] -- 0 second/job.

 [~] Burst avg application time  0.09 seconds
 [~] Burst average response time 0.157 seconds
 [~] Burst average responses/s   1.64 responses/second

 [~] Average application time    0.088 seconds
 [~] Download speed              195.295 KBps
 [~] Upload speed                0.584 KBps
 [~] Concurrency                 10/10 connections

====================================================
 [~] Please provide feedback at: contact@ecsypno.com
 [~] -- Thank you in advance!
====================================================